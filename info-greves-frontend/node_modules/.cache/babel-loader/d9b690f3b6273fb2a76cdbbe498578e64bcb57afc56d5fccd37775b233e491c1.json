{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\info-greves-frontend\\\\src\\\\components\\\\GreveForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { createGreve, updateGreve } from '../api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreveForm = ({\n  initialData = {}\n}) => {\n  _s();\n  const [formData, setFormData] = useState(initialData);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (id) {\n        await updateGreve(id, formData);\n      } else {\n        await createGreve(formData);\n      }\n      navigate('/');\n    } catch (error) {\n      console.error('Erro ao salvar greve:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"motivo\",\n      value: formData.motivo || '',\n      onChange: handleChange,\n      placeholder: \"Motivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Salvar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GreveForm, \"DWvdqQdRrOt08A6Au0yknpBc5oc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = GreveForm;\nexport default GreveForm;\nvar _c;\n$RefreshReg$(_c, \"GreveForm\");","map":{"version":3,"names":["useState","createGreve","updateGreve","useNavigate","useParams","jsxDEV","_jsxDEV","GreveForm","initialData","_s","formData","setFormData","navigate","id","handleChange","e","name","value","target","handleSubmit","preventDefault","error","console","onSubmit","children","type","motivo","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Workspace/info-greves-frontend/src/components/GreveForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { createGreve, updateGreve } from '../api';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst GreveForm = ({ initialData = {} }) => {\r\n  const [formData, setFormData] = useState(initialData);\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (id) {\r\n        await updateGreve(id, formData);\r\n      } else {\r\n        await createGreve(formData);\r\n      }\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Erro ao salvar greve:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Adicione campos conforme necessï¿½rio */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"motivo\"\r\n        value={formData.motivo || ''}\r\n        onChange={handleChange}\r\n        placeholder=\"Motivo\"\r\n      />\r\n      {/* Outros campos */}\r\n      <button type=\"submit\">Salvar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GreveForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,QAAQ;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,WAAW,GAAG,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACQ,WAAW,CAAC;EACrD,MAAMI,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE1B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAIP,EAAE,EAAE;QACN,MAAMX,WAAW,CAACW,EAAE,EAAEH,QAAQ,CAAC;MACjC,CAAC,MAAM;QACL,MAAMT,WAAW,CAACS,QAAQ,CAAC;MAC7B;MACAE,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEf,OAAA;IAAMiB,QAAQ,EAAEJ,YAAa;IAAAK,QAAA,gBAE3BlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXT,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAEP,QAAQ,CAACgB,MAAM,IAAI,EAAG;MAC7BC,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEF1B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACvB,EAAA,CAtCIF,SAAS;EAAA,QAEIJ,WAAW,EACbC,SAAS;AAAA;AAAA6B,EAAA,GAHpB1B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}